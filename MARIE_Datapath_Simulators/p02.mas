ORG      100
JUMP    START
BegAddr, HEX    0103       / Array = 0103
EndAddr, HEX	0123      / ArrayEnd = 0123

Array,	HEX	FFD1
		HEX FFD5
		HEX	FFD7
		HEX	FFDB
		HEX	FFE1
		HEX	FFE3
		HEX	FFE9
		HEX	FFED
		HEX	FFEF
		HEX	FFF3
		HEX	FFF5
		HEX	FFF9
		HEX	FFFB
		HEX	FFFD
		HEX	FFFE
		HEX	FFFF
		HEX 0001
		HEX 0002
		HEX 0003
		HEX 0005
		HEX 0007
		HEX 000B
		HEX	000D
		HEX 0011
		HEX 0013
		HEX 0017
		HEX 001D
		HEX 001F
		HEX 0025
		HEX 0029
		HEX 002B
		HEX 002F

DataEnd, HEX        00FE / data end address
NUMBER, 	HEX 0000
LOW,		HEX 0000
HIGH,   	HEX 0000
MIDDLE, 	HEX 0000
TEMP,		HEX 0000
COUNT, 		HEX 0000
TWO,    	DEC 2         
ONE,    	DEC 1
ZERO,    	HEX 0
NOTINARR, 	HEX 0000
TEST, HEX 0050
START, INPUT
STORE NUMBER
LOAD BegAddr
STORE LOW
LOAD EndAddr
STORE HIGH

MLOOP,	JNS HALF
LOAD COUNT
ADD LOW  
STORE MIDDLE
LOADI MIDDLE
SUBT NUMBER
JNS CHECKMID
SKIPCOND 800
JUMP STORELOW
SKIPCOND 000
JUMP STOREHIGH

CHECKMID, HEX 0
LOADI MIDDLE
SUBT NUMBER
SKIPCOND 400 
JUMPI CHECKMID
LOAD MIDDLE
OUTPUT
HALT 

STORELOW, LOAD MIDDLE  
STORE LOW
JUMP MLOOP 

STOREHIGH, LOAD MIDDLE
STORE HIGH  
JUMP MLOOP 

NOTFOUND, LOAD NOTINARR
OUTPUT
HALT

CHECKHIGH, LOADI HIGH
SUBT NUMBER
SKIPCOND 400
JUMP CHECKLOW
LOAD HIGH
OUTPUT
HALT 

CHECKLOW, LOADI LOW  
SUBT NUMBER
SKIPCOND 400
JUMP NOTFOUND
LOAD LOW
OUTPUT
HALT 

HALF, HEX 0  
LOAD ZERO  
STORE COUNT
LOAD HIGH
SUBT LOW         
STORE TEMP
SUBT ONE
SKIPCOND 800
JUMP CHECKHIGH 

LOOP,   LOAD TEMP
SUBT TWO
STORE TEMP
LOAD COUNT
ADD ONE
STORE COUNT
LOAD TEMP
SKIPCOND 800
JUMPI HALF
JUMP LOOP