ORG 0

JUMP    START

BADDR, hex        0003       / DBEGIN = 0003
EADDR, hex        0019       / DEND = 0019

// data section begins
DBEGIN, hex FFD1       / data begin address
	hex FFD5
	hex ffd7
	hex ffdb
	hex ffe3
	hex ffe9
	hex ffed
	hex ffef
	hex fff3
	hex fff5
	hex fff9
	hex fffb
	hex fffd
	hex fffe
	hex ffff
	hex 1
	hex 2
	hex 3
	hex 5
	hex 7
	hex b
	hex d
	hex 11
	hex 13
	hex 17
	hex 1d
	hex 1f
	hex 25
	hex 29
	hex 2b
DEND, hex 2f // data end address

NUMBER, dec 0
LOW,    HEX 0000
HIGH,   HEX 0000
MIDDLE, HEX 0000
TEMP,   HEX 0000
COUNT, HEX 0000
TWO,     DEC 2                    
ONE,      DEC 1
ZERO,    HEX 0
NOTHERE, HEX 0
TEST, HEX 0050

START, INPUT
	STORE NUMBER
	LOAD BADDR
	STORE LOW
	LOAD EADDR
	STORE HIGH

MLOOP, JNS HALF
	LOAD COUNT
	ADD LOW   
	STORE MIDDLE
	LOADI MIDDLE
	SUBT NUMBER
	JNS CHECKMID
	SKIPCOND 800
	JUMP STORELOW
	SKIPCOND 000
	JUMP STOREHIGH

CHECKMID, HEX 0
	LOADI MIDDLE
	SUBT NUMBER
	SKIPCOND 400  
	JUMPI CHECKMID
	LOAD MIDDLE
	OUTPUT
	HALT

STORELOW, LOAD MIDDLE
	STORE LOW
	JUMP MLOOP

STOREHIGH, LOAD MIDDLE
	STORE HIGH   
	JUMP MLOOP
	
NOTFOUND, LOAD NOTHERE
	OUTPUT
	HALT
	
CHECKHIGH, LOADI HIGH
	SUBT NUMBER
	SKIPCOND 400
	JUMP CHECKLOW
	LOAD HIGH
	OUTPUT
	HALT
	
CHECKLOW, LOADI LOW   
	SUBT NUMBER
	SKIPCOND 400
	JUMP NOTFOUND
	LOAD LOW
	OUTPUT
	HALT

HALF, HEX 0   
	LOAD ZERO   
	STORE COUNT
	LOAD HIGH
	SUBT LOW          
	STORE TEMP
	SUBT ONE
	SKIPCOND 800
	JUMP CHECKHIGH

LOOP,   LOAD TEMP
	SUBT TWO
	STORE TEMP
	LOAD COUNT
	ADD ONE
	STORE COUNT
	LOAD TEMP
	SKIPCOND 800
	JUMPI HALF
	JUMP LOOP